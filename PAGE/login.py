#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 6.0.1
#  in conjunction with Tcl version 8.6
#    Feb 7, 2021 13:47:16 PM +0200  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import login_support


def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = Toplevel1 (root)
    login_support.init(root, top)
    root.mainloop()


w = None


def create_Toplevel1(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    top = Toplevel1 (w)
    login_support.init(w, top, *args, **kwargs)
    return (w, top)


def destroy_Toplevel1():
    global w
    w.destroy()
    w = None


class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("600x450+660+210")
        top.minsize(120, 1)
        top.maxsize(1924, 1061)
        top.resizable(1,  1)
        top.title("New Toplevel")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.USERNAME_LABEL = tk.Label(top)
        self.USERNAME_LABEL.place(relx=0.15, rely=0.444, height=33, width=157)
        self.USERNAME_LABEL.configure(activebackground="#f9f9f9")
        self.USERNAME_LABEL.configure(activeforeground="black")
        self.USERNAME_LABEL.configure(background="#d9d9d9")
        self.USERNAME_LABEL.configure(disabledforeground="#a3a3a3")
        self.USERNAME_LABEL.configure(font="-family {Segoe UI} -size 14 -weight bold")
        self.USERNAME_LABEL.configure(foreground="#000000")
        self.USERNAME_LABEL.configure(highlightbackground="#d9d9d9")
        self.USERNAME_LABEL.configure(highlightcolor="black")
        self.USERNAME_LABEL.configure(text='''enter username:''')

        self.LOGIN_MESS = tk.Message(top)
        self.LOGIN_MESS.place(relx=0.0, rely=0.111, relheight=0.233
                , relwidth=0.998)
        self.LOGIN_MESS.configure(background="#ffcecf")
        self.LOGIN_MESS.configure(font="-family {Segoe UI} -size 24 -weight bold")
        self.LOGIN_MESS.configure(foreground="#000000")
        self.LOGIN_MESS.configure(highlightbackground="#d9d9d9")
        self.LOGIN_MESS.configure(highlightcolor="black")
        self.LOGIN_MESS.configure(text='''log in with existing user''')
        self.LOGIN_MESS.configure(width=599)

        self.Entry_USERNAME = tk.Entry(top)
        self.Entry_USERNAME.place(relx=0.517, rely=0.467, height=21
                , relwidth=0.273)
        self.Entry_USERNAME.configure(background="white")
        self.Entry_USERNAME.configure(disabledforeground="#a3a3a3")
        self.Entry_USERNAME.configure(font="TkFixedFont")
        self.Entry_USERNAME.configure(foreground="#000000")
        self.Entry_USERNAME.configure(highlightbackground="#d9d9d9")
        self.Entry_USERNAME.configure(highlightcolor="black")
        self.Entry_USERNAME.configure(insertbackground="black")
        self.Entry_USERNAME.configure(selectbackground="blue")
        self.Entry_USERNAME.configure(selectforeground="white")

        self.PASSWORD_LABEL = tk.Label(top)
        self.PASSWORD_LABEL.place(relx=0.15, rely=0.622, height=33, width=157)
        self.PASSWORD_LABEL.configure(activebackground="#f9f9f9")
        self.PASSWORD_LABEL.configure(activeforeground="black")
        self.PASSWORD_LABEL.configure(background="#d9d9d9")
        self.PASSWORD_LABEL.configure(disabledforeground="#a3a3a3")
        self.PASSWORD_LABEL.configure(font="-family {Segoe UI} -size 14 -weight bold")
        self.PASSWORD_LABEL.configure(foreground="#000000")
        self.PASSWORD_LABEL.configure(highlightbackground="#d9d9d9")
        self.PASSWORD_LABEL.configure(highlightcolor="black")
        self.PASSWORD_LABEL.configure(text='''enter password:''')

        self.Entry_PASSWORD = tk.Entry(top)
        self.Entry_PASSWORD.place(relx=0.517, rely=0.644, height=21
                , relwidth=0.273)
        self.Entry_PASSWORD.configure(background="white")
        self.Entry_PASSWORD.configure(disabledforeground="#a3a3a3")
        self.Entry_PASSWORD.configure(font="TkFixedFont")
        self.Entry_PASSWORD.configure(foreground="#000000")
        self.Entry_PASSWORD.configure(highlightbackground="#d9d9d9")
        self.Entry_PASSWORD.configure(highlightcolor="black")
        self.Entry_PASSWORD.configure(insertbackground="black")
        self.Entry_PASSWORD.configure(selectbackground="blue")
        self.Entry_PASSWORD.configure(selectforeground="white")


        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.CANCEL = ttk.Button(top)
        self.CANCEL.place(relx=0.183, rely=0.8, height=27, width=87)
        self.CANCEL.configure(takefocus="")
        self.CANCEL.configure(text='''cancel''')
        self.CANCEL.configure(underline="2")
        self.CANCEL.configure(command=login_support.cancel_startMenu)

        self.LOGINBUTTON = tk.Button(top)
        self.LOGINBUTTON.place(relx=0.45, rely=0.778, height=48, width=178)
        self.LOGINBUTTON.configure(activebackground="#ececec")
        self.LOGINBUTTON.configure(activeforeground="#000000")
        self.LOGINBUTTON.configure(background="#ffcecf")
        self.LOGINBUTTON.configure(disabledforeground="#a3a3a3")
        self.LOGINBUTTON.configure(font="-family {Segoe UI} -size 14 -weight bold")
        self.LOGINBUTTON.configure(foreground="#000000")
        self.LOGINBUTTON.configure(highlightbackground="#d9d9d9")
        self.LOGINBUTTON.configure(highlightcolor="black")
        self.LOGINBUTTON.configure(pady="0")
        self.LOGINBUTTON.configure(text='''log in''')
        self.LOGINBUTTON.configure(command=login_support.login_check)

        self.error_label = tk.Label(top)
        self.error_label.place(relx=0.083, rely=0.378, height=23, width=467)
        self.error_label.configure(activebackground="#d9d9d9")
        self.error_label.configure(activeforeground="#000000")
        self.error_label.configure(background="#d9d9d9")
        self.error_label.configure(disabledforeground="#a3a3a3")
        self.error_label.configure(font="-family {Tw Cen MT} -size 14 -weight bold")
        self.error_label.configure(foreground="red")
        self.error_label.configure(highlightbackground="#d9d9d9")
        self.error_label.configure(highlightcolor="black")
        self.error_label.configure(text="")

if __name__ == '__main__':
    vp_start_gui()





